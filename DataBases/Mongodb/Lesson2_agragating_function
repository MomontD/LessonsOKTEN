Опис агрегатних функцій :
https://www.mongodb.com/docs/manual/reference/operator/aggregation-pipeline/

Виклик агрегатної функції з оператора - aggregate.
Агрегатна функція - це масив послідовних дій(операцій над БД) в результаті якого ми отримуємо необхідний результат (min,
max ,avg , group і т.д.).

db.teacher.aggregate([                      --- [ відкривається масив дій , агрегатних функцій
  {                                         ПЕРША ДІЯ
    $group: {                               --- group - групування. Перша дія в якій зазначаємо критерії групування
      _id: '$lesson',                       --- _id - константа (тільки така назва). Згрупує в БД всі обєкти lesson
      countOfTeachers: { $sum: 1 },         --- countOfTeachers (довільна назва) відобразить к-сть вчителів lesson
      min: { $min: '$payment' },            --- відобразить min ЗП вчителя
      max: { $max: '$payment' },            --- відобразить max ЗП вчителя
      avg: { $avg: '$payment' },            --- відобразить середню ЗП вчителя
      sumMoney: { $sum: '$payment' }        --- sumMoney(довільна назва) відобразить суму ЗП вчителя по різних предметах
    }
  },                                        ДРУГА ДІЯ
  { $sort: { sumMoney: -1 } },              відсортує вищезгрупований обєкт по ЗП вчителів. 1 -мін-макс, -1 макс -мін
                                            ТРЕТЯ ДІЯ
  {
    $project: {                             project - викор. остан. парам., для формув. кінц. відображ. обєкту
      lesson: '$_id',                                 вказуються значення з попередніх дій з ознакою 1 або 0
      countOfTeachers: 1,                             1 - відображати , 0 не відображати.
      min: 1,
      max: 1,
      avg: 1,
      sumMoney: 1,
      _id: 0
    }
  }
])

Об'єднання таблиць :

db.teacher.aggregate([                --- додаємо інформацію до таблиці teacher з students
  {
    $lookup: {                        --- $lookup - оператор додавання
      from: 'students',               --- вказуємо з якої таблиці будемо дод. інформацію
      localField: 'class_curator',    --- class_curator - поле в таблиці teacher (який клас курує "7")
      foreignField: 'class',          --- class - поле в таблиці students ( до якого класу належить "7")
      as: 'myStudents'                --- myStudents назва поля яке буде додане в табл. teacher з масивом студентів.
    }
  },
  { $skip: 4 },                       --- пропустити 2
  { $limit: 2 }                       --- вивести 2
])

Складніший приклад з поєднанням декількох агрегатних ф-й :
db.teacher.aggregate([                  --- звертаємось до БД teacher
  {
    $match: {                           --- $match (включає)
      class_curator: { $gte: 5 }        --- $gte: 5 відбере вчителів в кого є класи вище 5-го
    }
  },
  { $sort: { class_curator: -1 } },     --- посортує їх 1 -мін-макс, -1 макс -мін
  {
    $lookup: {                          --- обєднає , див. приклад вище
      from: 'students',
      localField: 'class_curator',
      foreignField: 'class',
      as: 'myStudents'
    }
  },
  {
    $match: {                                   --- знову ставимо ознаку "включає"
      'myStudents.parents.profession': 'doctor'     і відбираємо студентів в кого батьки по професії 'doctor'
    }
  }
])
********************
Послідовність дій  :
1. Обираємо БД з якою будемо працювати
2. Сортуємо вчителів по класам
3. До обраної і відсортованої БД додаємо студентів з таблиці students
4. Далі з обєднанох таблиці шукаємо студентів в кого батьки doctor
********************

Ще один приклад , розбиття масиву на обєкти

db.students.aggregate([                --- звертаємось до БД students
  {
    $match: {                          --- шукаємо в кого батьки є doctor
      'parents.profession': 'doctor'
    }
  },
  {
    $unwind: '$parents'               ---- поле parents в табл. students є масивом. $unwind - робив. маисв на обєкти
  },
  {
    $match: {                         ---- після робиття масиву на обєкти шукаємо в них професію doctor
      'parents.profession': 'doctor'
    }
  },
  { $count: 'DoctorCount' }           ---- $count створить поле DoctorCount і виведе в нього к-сть таких батьків
])